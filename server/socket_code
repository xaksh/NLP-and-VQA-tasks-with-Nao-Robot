def server_program():
    demo=Pythia()
    print("Instance Created")
    # get the hostname
    host = socket.gethostname()
    port = 8888  # initiate port no above 1024

    server_socket = socket.socket()  # get instance
    # look closely. The bind() function takes tuple as argument
    server_socket.bind((host, port))  # bind host address and port together

    # configure how many client the server can listen simultaneously
    server_socket.listen(10)
    while True:
        conn, address = server_socket.accept()  # accept new connection
        print("Connection from: " + str(address))
        while True:
            # receive data stream. it won't accept data packet greater than 1024 bytes
            data = conn.recv(1024)
            if not data:
                break
            image="/var/www/html/uploads/camImage.png"
            question= data.decode('utf-8')
            print("Question is: "+question)
            scores, predictions = demo.predict(image, question)
            scores = [score * 100 for score in scores]
            df = pd.DataFrame({"Prediction": predictions,"Confidence": scores})
            #print(predictions)
            #print(scores)
            print(predictions[0])
            resp = predictions[0]
            print("from connected user: " + str(data))
            conn.send(resp.encode())  # send data to the client
    conn.close()  # close the connection


if __name__ == '__main__':
    server_program()
